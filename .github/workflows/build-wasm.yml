name: build

on:
  push:
    branches: [ master ]
    tags:
      - v*
      - p*
  pull_request:
    branches: [ master ]

  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        python: [ 3.12 ]
        plat: [ x86_64 ]
        parallel: [ serial ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      
      - name: install requirements (linux / macos)
        if: matrix.os == 'macos-13' || matrix.os == 'ubuntu-20.04'
        run: |
          python -m pip install pip build twine setuptools --upgrade
          python -m pip install pyodide-build numpy 'cmake>=3.19' pybind11==2.12.0
      
      - name: setup emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          PYODIDE_EMSCRIPTEN_VERSION=$(pyodide config get emscripten_version)
          echo $PYODIDE_EMSCRIPTEN_VERSION
          ./emsdk install ${PYODIDE_EMSCRIPTEN_VERSION}
          ./emsdk activate ${PYODIDE_EMSCRIPTEN_VERSION}
          source ./emsdk_env.sh
          cd ..
          em++ -v
      
      - name: download blas
        run: |
          wget https://github.com/pyodide/pyodide/releases/download/0.26.3/xbuildenv-0.26.3.tar.bz2
          tar xjf xbuildenv-0.26.3.tar.bz2
          ls -l xbuildenv/pyodide-root/packages/.libs/lib
      
      - name: build
        run: |
          source emsdk/emsdk_env.sh
          export BLAS_ROOT=$PWD/xbuildenv/pyodide-root/packages/.libs
          cd A
          mkdir build
          cd build
          CC=emcc CXX=em++ cmake ..
          emmake make VERBOSE=1
          # emcc -O2 MyProject -o MyProject.js
          ls -l
          node MyProject.js
